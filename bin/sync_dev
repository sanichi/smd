#!/usr/bin/perl
use strict;

# DB setup.
my $tsu_db  = 'smd_production';
my $loc_db  = 'smd_development';
my $tmp_sql = '/tmp/smd.sql';
my $ssh_usr = 'sanichi@thessaloniki.sanichi.me';

# Generate data on server.
&run("ssh $ssh_usr 'pg_dump $tsu_db --no-owner --no-privileges --clean --file $tmp_sql'", "couldn't export DB on server");

# Remove old local data.
&run("rm -f $tmp_sql", "couldn't remove $tmp_sql") if -f $tmp_sql;

# Copy new data from server.
&run("scp $ssh_usr:$tmp_sql $tmp_sql", "couldn't copy SQL export from server");

# Image setup.
my $tsu_path = '/var/www/smd/shared/public';
my $loc_path = '/Users/mjo/Projects/app/smd/public';
my $tsu_dir  = 'img';
my $tmp_tar  = '/tmp/smd.tar.gz';

# Generate data on server.
&run("ssh $ssh_usr 'tar -zcf $tmp_tar -C $tsu_path $tsu_dir'", "couldn't tar images on server");

# Remove old local data.
&run("rm -f $tmp_tar", "couldn't remove $tmp_tar") if -f $tmp_tar;

# Copy new data from server.
&run("scp $ssh_usr:$tmp_tar $tmp_tar", "couldn't copy tar export from server");

# Does this all look good so far?
my $ans = &ask('Proceed with sync [yN]', qr/^(Y(es)?|No?|)$/i);
exit unless $ans =~ /^Y(es)?/i;

# Update local database.
&run("psql -q $loc_db < $tmp_sql", "couldn't import SQL to development DB");

# Update local images.
&run("tar -xzf $tmp_tar -C $loc_path", "couldn't untar local images");

#
# Utilities.
#

sub check { die "$_[1]\n", unless $_[0] }

sub run { printf "$_[0]\n"; &check(!system($_[0]), $_[1]) }

sub ask
{
  my ($question, $allowed) = @_;

  my $answer;
  while (!defined($answer) || $answer !~ $allowed)
  {
    printf '%s?: ', $question;
    $answer = <STDIN>;
    $answer =~ s/^\s+//;
    $answer =~ s/\s+$//;
  }

  $answer;
}
